library(readr)
model <- read_csv("E:/ZikNet/pythonScripts/model.csv")
pairs(model)
pairs(~Casos+Busquedas+Precipitacion+Temp+Altura, data=model)
View(model)
View(model)
fit <- lm(Casos ~ Busquedas+Precipitacion+Temp, data=model)
inTrain <- createDataPartition(y=model$Casos, p=0.7, list=FALSE)
trainingSet <- model[inTrain,]
testingSet <- model[-inTrain,]
dim(trainingSet);dim(testingSet)
library(ISLR); library(ggplot2); library(caret)
pairs(~Casos+Busquedas+Precipitacion+Temp+Altura, data=model)
fit <- lm(Casos ~ Busquedas+Precipitacion+Temp, data=model)
inTrain <- createDataPartition(y=model$Casos, p=0.7, list=FALSE)
trainingSet <- model[inTrain,]
testingSet <- model[-inTrain,]
dim(trainingSet);dim(testingSet)
TrainingModel <- lm(Casos ~ Busquedas+Precipitacion+Temp, data=trainingSet)
summary(TrainingModel)
predict(TrainingModel, testingSet, interval="predict")
CheckModel <- train(Casos ~ Busquedas+Precipitacion+Temp, data=trainingSet, method="lm")
DoubleCheckModel<-CheckModel$finalModel
plot(DoubleCheckModel,1,pch=19,cex=0.5)
TestingModel<-lm(Casos ~ Busquedas+Precipitacion+Temp, data=testingSet)
sqrt(sum((TrainingModel$fitted-trainingSet$Casos)^2))
sqrt(sum((TestingModel$fitted-testingSet$Casos)^2))
lin.reg <- lm(log(Casos+1) ~ Busquedas + Precipitacion + Temp + Altura data=trainingSet)
summary(lin.reg)
library(ISLR); library(ggplot2); library(caret)
pairs(~Casos+Busquedas+Precipitacion+Temp+Altura, data=model)
fit <- lm(Casos ~ Busquedas+Precipitacion+Temp, data=model)
inTrain <- createDataPartition(y=model$Casos, p=0.7, list=FALSE)
trainingSet <- model[inTrain,]
testingSet <- model[-inTrain,]
dim(trainingSet);dim(testingSet)
lin.reg <- lm(log(Casos+1) ~ Busquedas + Precipitacion + Temp + Altura data=trainingSet)
summary(lin.reg)
lin.reg <- lm(log(Casos+1) ~ Busquedas + Precipitacion + Temp + Altura, data=trainingSet)
summary(lin.reg)
test.pred.pin <- exp(predict(lin.reg,testingSet))-1
RMSE.lin.reg <- sqrt(mean((test.pred.lin-testingSet$Casos)^2))
RMSE.lin.reg
RMSE.lin.reg <- sqrt(mean((test.pred.lin-testingSet$Casos)^2))
test.pred.pin <- exp(predict(lin.reg,testingSet))-1
RMSE.lin.reg <- sqrt(mean((test.pred.lin-testingSet$Casos)^2))
rm(test.pred.pin)
test.pred.lin <- exp(predict(lin.reg,testingSet))-1
RMSE.lin.reg <- sqrt(mean((test.pred.lin-testingSet$Casos)^2))
RMSE.lin.reg
MAE.lin.reg <- mean(abs(test.pred.lin-testingSet$Casos))
MAE.lin.reg
lin.reg <- lm(log(Casos+1) ~ Busquedas + Precipitacion + Temp, data = trainingSet)
summary(lin.reg)
test.pred.lin <- exp(predict(lin.reg,testingSet))-1
#Error cuadrÃ¡tico
RMSE.lin.reg <- sqrt(mean((test.pred.lin-testingSet$Casos)^2))
RMSE.lin.reg
MAE.lin.reg <- mean(abs(test.pred.lin-testingSet$Casos))
MAE.lin.reg
library(rpart)
library(rpart)
library(raddle)
install.packages("rattle")
library(rpart)
library(rattle)
library(rpart)
library(raddle)
library(rpart)
library("rattle")
install.packages("rattle")
library(rpart)
library("rattle")
library(rpart)
library(rattle)
install.packages("rattle")
library(rpart)
library(rattle)
